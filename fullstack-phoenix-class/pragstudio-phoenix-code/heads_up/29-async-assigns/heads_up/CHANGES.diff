--- a/lib/heads_up/incidents.ex
+++ b/lib/heads_up/incidents.ex
@@ -49,6 +49,8 @@ defmodule HeadsUp.Incidents do
   end
 
   def urgent_incidents(incident) do
+    Process.sleep(2000)
+
     Incident
     |> where(status: :pending)
     |> where([i], i.id != ^incident.id)
--- a/lib/heads_up_web/live/incident_live/show.ex
+++ b/lib/heads_up_web/live/incident_live/show.ex
@@ -15,7 +15,9 @@ defmodule HeadsUpWeb.IncidentLive.Show do
       socket
       |> assign(:incident, incident)
       |> assign(:page_title, incident.name)
-      |> assign(:urgent_incidents, Incidents.urgent_incidents(incident))
+      |> assign_async(:urgent_incidents, fn ->
+        {:ok, %{urgent_incidents: Incidents.urgent_incidents(incident)}}
+      end)
 
     {:noreply, socket}
   end
@@ -53,13 +55,25 @@ defmodule HeadsUpWeb.IncidentLive.Show do
     ~H"""
     <section>
       <h4>Urgent Incidents</h4>
-      <ul class="incidents">
-        <li :for={incident <- @incidents}>
-          <.link navigate={~p"/incidents/#{incident}"}>
-            <img src={incident.image_path} /> <%= incident.name %>
-          </.link>
-        </li>
-      </ul>
+      <.async_result :let={result} assign={@incidents}>
+        <:loading>
+          <div class="loading">
+            <div class="spinner"></div>
+          </div>
+        </:loading>
+        <:failed :let={{:error, reason}}>
+          <div class="failed">
+            Whoops: <%= reason %>
+          </div>
+        </:failed>
+        <ul class="incidents">
+          <li :for={incident <- result}>
+            <.link navigate={~p"/incidents/#{incident}"}>
+              <img src={incident.image_path} /> <%= incident.name %>
+            </.link>
+          </li>
+        </ul>
+      </.async_result>
     </section>
     """
   end
