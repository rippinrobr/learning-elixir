--- a/lib/heads_up/admin.ex
+++ b/lib/heads_up/admin.ex
@@ -10,13 +10,8 @@ defmodule HeadsUp.Admin do
   end
 
   def create_incident(attrs \\ %{}) do
-    %Incident{
-      name: attrs["name"],
-      description: attrs["description"],
-      priority: attrs["priority"] |> String.to_integer(),
-      status: attrs["status"] |> String.to_existing_atom(),
-      image_path: attrs["image_path"]
-    }
-    |> Repo.insert!()
+    %Incident{}
+    |> Incident.changeset(attrs)
+    |> Repo.insert()
   end
 end
--- a/lib/heads_up_web/live/admin_incident_live/form.ex
+++ b/lib/heads_up_web/live/admin_incident_live/form.ex
@@ -2,12 +2,15 @@ defmodule HeadsUpWeb.AdminIncidentLive.Form do
   use HeadsUpWeb, :live_view
 
   alias HeadsUp.Admin
+  alias HeadsUp.Incidents.Incident
 
   def mount(_params, _session, socket) do
+    changeset = Incident.changeset(%Incident{}, %{})
+
     socket =
       socket
       |> assign(:page_title, "New Incident")
-      |> assign(:form, to_form(%{}, as: "incident"))
+      |> assign(:form, to_form(changeset))
 
     {:ok, socket}
   end
@@ -44,10 +47,18 @@ defmodule HeadsUpWeb.AdminIncidentLive.Form do
   end
 
   def handle_event("save", %{"incident" => incident_params}, socket) do
-    _incident = Admin.create_incident(incident_params)
+    case Admin.create_incident(incident_params) do
+      {:ok, _incident} ->
+        socket =
+          socket
+          |> put_flash(:info, "Incident created successfully!")
+          |> push_navigate(to: ~p"/admin/incidents")
 
-    socket = push_navigate(socket, to: ~p"/admin/incidents")
+        {:noreply, socket}
 
-    {:noreply, socket}
+      {:error, %Ecto.Changeset{} = changeset} ->
+        socket = assign(socket, :form, to_form(changeset))
+        {:noreply, socket}
+    end
   end
 end
